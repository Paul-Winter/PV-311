Паттерн - шаблон;
	- образец;
	- описывает задачу, которая снова и снова возникает в нашей работе,
	  а также принцип её решения, таким образом, что решение можно использовать
	  миллион раз, ничего не изобретая заново и при этом никакие две реализации
	  не будут полностью одинаковыми;
	- описание взаимодействий объектов и классов, адаптированных
	  для решения общей задачи проектирования в конкретном контексте;
	- общее описание хорошего способа решения задачи.

Идиомы - это паттерны, описывающие типичные решения на конкретном языке программирования.

Паттерн состоит из:
1. Имя - описание проблемы, её решения и их последствия;
2. Задача - описание того, когда следует применять паттерн;
3. Решение - описание элементов дизайна, отношений между ними, их обязанностей и взаимодействий между ними;
4. Результаты - следствия применения паттерна, его плюсы и минусы.

(Code smell) Ваш код "плохо пахнет" если в нём есть:
- дубляж кода;
- большие методы;
- большие классы;
- зависть;
- нарушение приватности;
- нарушение завещания;
- ленивый класс;
- чрезмерная сложность;
- чрезмерно длинные идентификаторы.

Классификация паттернов:
- архитектурные;
- проектирования:
	- порождающие - абстрагируют процесс создания;
	- структурные - решают вопросы создания из классов и объектов более крупных структур;
	- поведенческие - разделяют обязанности между объектами, описывают способы их взаимодействия.
- анализа;
- тестирования;
- реализации;
- параллельного программирования.

Порождающие паттерны:
- Abstract Factory;
- Factory Method;
- Builder;
- Prototype;
- Singleton.

Структурные паттерны:
- Adapter;
- Bridge;
- Composite;
- Decorator;
- Facade;
- Flyweight;
- Proxy.

Поведенческие паттерны:
- Chain of Responsibility;
- Command;
- Interpreter;
- Iterator;
- Mediator;
- Memento;
- Observer;
- State;
- Strategy;
- Template Method;
- Visitor.